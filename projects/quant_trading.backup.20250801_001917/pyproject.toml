[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "quant-trading-organism"
version = "0.1.0"
description = "Asset-Agnostic Quant Trading Organism with Genetic Strategy Evolution"
authors = ["Quant Organism Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
python-dotenv = "^1.0.0"
hyperliquid-python-sdk = "^1.0.0"
websockets = "^12.0"
aiohttp = "^3.9.0"
requests = "^2.31.0"
pandas = "^2.1.0"
numpy = "^1.24.0"
duckdb = "^0.9.0"
pyarrow = "^14.0.0"
deap = "^1.4.1"
scoop = "^0.7.1.1"
vectorbt = "^0.26.0"
# pandas-ta = "^0.3.14b0"  # DISABLED: compatibility issues, using pandas.pydata.org APIs (PRIMARY)
ta-lib = "^0.5.0"  # Optional C library enhancement (pandas APIs are primary)
rich = "^13.7.0"
textual = "^0.45.0"
loguru = "^0.7.2"
supervisor = "^4.2.5"
pexpect = "^4.9.0"
asyncio-mqtt = "^0.16.1"
uvloop = "^0.19.0"
plotly = "^5.17.0"
matplotlib = "^3.8.0"
sqlalchemy = "^2.0.23"
asyncpg = "^0.29.0"
cryptography = "^41.0.8"
keyring = "^24.3.0"
numba = "^0.58.1"
bottleneck = "^1.3.7"
httpx = "^0.25.2"
urllib3 = "^2.1.0"
pyyaml = "^6.0.1"
toml = "^0.10.2"
joblib = "^1.3.2"
multiprocess = "^0.70.15"
orjson = "^3.9.10"
msgpack = "^1.0.7"
python-dateutil = "^2.8.2"
pytz = "^2023.3"
sentry-sdk = "^1.38.0"
prometheus-client = "^0.19.0"
docker = "^6.1.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
jupyter = "^1.0.0"
ipython = "^8.17.0"

[tool.poetry.group.scale.dependencies]
ray = {extras = ["default"], version = "^2.8.0"}

[tool.poetry.scripts]
quant-trader = "src.main:main"
data-ingest = "src.data.hyperliquid_client:main"
strategy-evolve = "src.strategy.evolution_engine:main"
backtest-runner = "src.backtesting.vectorbt_engine:main"
cli-dashboard = "src.monitoring.cli_dashboard:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["hyperliquid", "vectorbt", "deap", "rich", "textual"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "hyperliquid.*",
    "vectorbt.*",
    "deap.*",
    "scoop.*",
    "pandas_ta.*",
    "talib.*",
    "supervisor.*",
    "pexpect.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "genetic: marks tests related to genetic algorithms",
    "backtesting: marks tests related to backtesting",
    "data: marks tests related to data processing",
    "performance: marks tests that measure performance metrics",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]