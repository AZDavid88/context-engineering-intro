{
  "modules_tested": 7,
  "modules_working": 7,
  "modules_broken": 0,
  "total_functions_tested": 13,
  "functions_working": 13,
  "functions_broken": 0,
  "detailed_results": {
    "backtesting": {
      "status": "working",
      "functions_tested": 1,
      "functions_working": 1,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {
        "files_analyzed": 0,
        "functions_claimed": 0,
        "classes_claimed": [
          "| Class | \u2705 Matches docs | Performance metrics calculator |",
          "VectorBTEngine",
          "| DataClass | \u2705 Matches docs | Metrics container |",
          "| Line 542 | Bull/bear/sideways market performance | \u2705 Market adaptation | Volatility-based regime classification |",
          "| Class | \u2705 Matches docs | Core backtesting engine |",
          "| Class | \u2705 Matches docs | Signal conversion bridge |"
        ],
        "key_functions": []
      },
      "reality_check": {
        "performance_analyzer": {
          "working": true,
          "analyzer_created": true
        }
      }
    },
    "config": {
      "status": "working",
      "functions_tested": 1,
      "functions_working": 1,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {
        "files_analyzed": 0,
        "functions_claimed": 0,
        "classes_claimed": [
          "| Class | settings.py:257 | \u2705 Matches docs | Main configuration class |"
        ],
        "key_functions": []
      },
      "reality_check": {
        "settings": {
          "working": true,
          "settings_loaded": true,
          "settings_type": "Settings"
        }
      }
    },
    "data": {
      "status": "working",
      "functions_tested": 3,
      "functions_working": 3,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {
        "files_analyzed": 7,
        "functions_claimed": 0,
        "classes_claimed": [],
        "key_functions": []
      },
      "reality_check": {
        "storage_interfaces": {
          "working": true,
          "storage_created": true,
          "storage_type": "LocalDataStorage"
        },
        "hyperliquid_client": {
          "working": true,
          "client_created": true
        },
        "market_data_pipeline": {
          "working": true,
          "pipeline_created": true
        }
      }
    },
    "deployment": {
      "status": "working",
      "functions_tested": 1,
      "functions_working": 1,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {},
      "reality_check": {
        "documentation_module": {
          "working": true,
          "type": "documentation_only",
          "note": "deployment module contains guidelines and documentation, not executable code"
        }
      }
    },
    "discovery": {
      "status": "working",
      "functions_tested": 1,
      "functions_working": 1,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {
        "files_analyzed": 0,
        "functions_claimed": 0,
        "classes_claimed": [
          "| Class | \u2705 Matches docs | 3-stage genetic algorithm coordinator |",
          "| Class | \u2705 Matches docs | Rate-limited enhanced filtering |",
          "| Class | \u2705 Matches docs | Base asset filtering system |",
          "| Class | \u2705 Matches docs | Crypto trading safety parameters |",
          "| Class | \u2705 Matches docs | 4-tier optimization system |",
          "| Line 279 | Classify current market regime based on volatility | \u2705 Regime detection | Volatility threshold-based classification |"
        ],
        "key_functions": []
      },
      "reality_check": {
        "enhanced_asset_filter": {
          "working": true,
          "filter_created": true
        }
      }
    },
    "execution": {
      "status": "working",
      "functions_tested": 3,
      "functions_working": 3,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {
        "files_analyzed": 0,
        "functions_claimed": 0,
        "classes_claimed": [
          "class with Kelly Criterion optimization"
        ],
        "key_functions": []
      },
      "reality_check": {
        "genetic_strategy_pool": {
          "working": true,
          "config_created": true
        },
        "retail_connection_optimizer": {
          "working": true,
          "class_instantiated": true
        },
        "order_management": {
          "working": true,
          "enums_imported": true
        }
      }
    },
    "strategy": {
      "status": "working",
      "functions_tested": 3,
      "functions_working": 3,
      "functions_broken": 0,
      "import_status": {},
      "function_tests": {},
      "documentation_claims": {
        "files_analyzed": 25,
        "functions_claimed": 0,
        "classes_claimed": [
          "class (lines 126-169): \u2705 Complete strategy with genes, fitness, evolution history",
          "(lines 145-172): \u2705 Fetches and classifies tradeable assets from Hyperliquid",
          "AssetClass",
          "(lines 132-195): \u2705 Creates DEAP fitness classes and primitive sets",
          "class (lines 170-250): \u2705 RSI, SMA, EMA, MACD, Bollinger Bands, ATR",
          "GeneticProgrammingEngine",
          "**Primary Class**:",
          "UniversalStrategyEngine",
          "GeneticEngine",
          "**Abstract Base Class**:",
          "**Asset Classification System** (",
          "PopulationManager",
          "LinearSVCClassifierSeed",
          "(linear_svc_classifier_seed.py): \u2705 Support Vector Classification with genetic feature engineering"
        ],
        "key_functions": []
      },
      "reality_check": {
        "genetic_seeds_registry": {
          "working": true,
          "seed_count": 14,
          "sample_seeds": [
            "EMACrossoverSeed",
            "DonchianBreakoutSeed",
            "RSIFilterSeed",
            "StochasticOscillatorSeed",
            "SMATrendFilterSeed"
          ]
        },
        "genetic_engine_core": {
          "working": true,
          "class_instantiated": true
        },
        "universal_strategy_engine": {
          "working": true,
          "class_instantiated": true
        }
      }
    }
  },
  "timestamp": "2025-08-07T01:20:40.947882"
}